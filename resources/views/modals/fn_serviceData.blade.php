<script>
    let serviceData = () => {
        return {
            'tekhtm': 'srv_akb5.htm',
            'makbSZ': val('serviceChargeTrigger'),
            'srvZb': val('servicepreTrigger'),
            'srvpredT': val('preType') === 1 ? 0 : 1,
            'srvstZU': val('servicepreParamVInput'),
            'srvPredCH': val('servicepreParamTInput'),
            'srvZm': val('servicepreCurType') === 1 ? 0 : 1,
            'srvZIp': val('servicepreCurMaxInput'),
            'srvZIon': val('servicepreDurImpInput'),
            'srvZIoff': val('serviceprePauseImpInput'),
            'srvZIdc': val('servicepreConstCurInput'),
            'smainZU': val('servicechargeVMaxInput'),
            'slastZU': val('servicechargeVPivotInput'),
            'smainZI': val('servicechargeAMaxInput'),
            'smainZR': val('serviceasymTrigger'),
            'srvAZI': val('serviceasymADischargeInput'),
            'smainZRQ': val('serviceasymDurInput'),
            'smainZRD': val('serviceasymRatioInput'),
            'slastZF': val('servicechargeEndType') === 1 ? 0 : 1,
            'slastZFI': val('servicechargeEndParamAInput'),
            'srvDH': val('servicechargeEndParamATimeInput'),
            'slastZFT': val('servicechargeEndParamVTimeInput'),
            'srvDopCh': val('serviceextraChargeTrigger'),
            'srvlastZUL': val('serviceextraChargeV0Input'),
            'srvlastZUH': val('serviceextraChargeV1Input'),
            'srvlowZI': val('serviceextraChargeAInput'),
            'srvlowZT': val('serviceextraChargePeriodInput'),
            'srvlowZH': val('serviceextraChargeTInput'),
            'mScn': val('cyclesCountInput'),
            'msetDU': val('dischargeVInput'),
            'msetDI': val('dischargeAInput'),
            'msetWT': val('dischargePauseInput'),
            'fdis': val('dischargeExtraTrigger'),
            'fdisFU': val('dischargeExtraVInput'),
            'fdisFI': val('dischargeExtraAInput'),
            'fdisT': val('dischargeExtraPauseInput'),
            'discntT': val('dischargeExtraHoursInput'),
            'start': 'Старт'
        };
    }
</script>
